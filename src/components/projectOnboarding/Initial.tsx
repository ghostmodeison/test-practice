import React, { useCallback, useState } from "react";
import { useRouter } from "next/navigation";
import { Routes } from "@/config/routes";
import { useDispatch, useSelector } from "react-redux";
import { customToast } from "@/components/ui/customToast";
import { setDetailStepper } from "@/app/store/slices/projectOnboardingSlice";

interface OnboardingOption {
    title: string;
    description: string;
}

const registries = [
    {
        id: 'carbon-registry',
        name: 'Carbon Registry',
        logo: (
            <svg width="146" height="60" viewBox="0 0 146 60" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path
                    d="M46.728 12.8964H13.5712C13.3533 12.8964 13.1776 13.0712 13.1776 13.295V46.1175H46.981V13.1552C46.981 13.0083 46.8685 12.8964 46.7209 12.8964H46.728ZM43.2492 2.69926C45.477 3.02098 47.241 4.74148 47.5924 6.95156L48.007 9.53931C48.2389 10.994 49.3844 12.1341 50.8462 12.3649L54.9223 13.0083C56.2786 13.2251 57.375 14.2252 57.7053 15.5471C57.9934 16.7081 58.2886 17.911 58.2253 19.03C57.628 18.3446 56.9955 17.7991 56.2927 17.5683C55.2737 17.2326 47.1075 19.0091 45.0062 20.5687C44.1277 21.2191 43.4109 21.9815 42.8346 22.7788C41.6329 24.4433 39.2364 24.6741 37.7606 23.2474C37.7255 23.2124 37.6903 23.1774 37.6552 23.1425C37.6552 23.1425 37.4443 22.9257 37.114 22.534C35.828 20.9814 36.1934 18.8412 37.859 17.7012C38.5688 17.2116 39.2364 16.6521 39.8408 16.0157C41.5907 14.1833 43.4179 5.11915 43.193 4.2659C43.0314 3.64344 42.7081 3.1119 42.2935 2.64331C42.2724 2.62233 42.2935 2.58736 42.3146 2.59435C42.6167 2.61533 42.926 2.6573 43.2422 2.69926H43.2492ZM20.0507 1.57324C21.8569 0.230409 24.3236 0.202434 26.1438 1.52428L28.2732 3.06294C29.4749 3.93019 31.0913 3.93019 32.293 3.06294L35.6312 0.650044C36.7416 -0.154256 38.2314 -0.217201 39.4051 0.489184C40.4311 1.10465 41.4853 1.74809 42.2443 2.58736C41.3377 2.52441 40.5014 2.58736 39.8408 2.91607C38.885 3.39166 34.3662 10.3996 33.9937 12.9733C33.8391 14.0224 33.8672 15.0225 34.0148 15.9667C34.3311 18.0159 32.799 19.9463 30.7188 19.9602C30.6907 19.9602 30.6556 19.9602 30.6275 19.9602C30.6275 19.9602 30.3955 19.9602 30.002 19.9253C27.985 19.7574 26.5654 17.89 26.9238 15.9038C27.0714 15.0785 27.1417 14.2322 27.1206 13.379C27.0574 10.8542 21.9061 3.15387 21.14 2.71325C20.5778 2.39153 19.9805 2.23766 19.355 2.1957C19.3269 2.1957 19.3128 2.16073 19.3339 2.13975C19.5658 1.94392 19.8048 1.75508 20.0578 1.56625L20.0507 1.57324ZM2.85391 17.0997C3.17718 14.8827 4.906 13.1272 7.12676 12.7705L9.72702 12.3579C11.1888 12.1271 12.3343 10.987 12.5662 9.53231L13.2128 5.47584C13.4306 4.12602 14.4356 3.03497 15.7638 2.70625C16.9304 2.4195 18.1392 2.12576 19.2636 2.1887C18.5749 2.78319 18.0268 3.41264 17.7948 4.11203C17.4575 5.12615 19.2426 13.2531 20.8097 15.3443C21.4422 16.1905 22.1801 16.8829 22.9532 17.4424C24.6258 18.6594 24.9701 21.0443 23.5295 22.52C23.4873 22.562 23.4451 22.6109 23.3959 22.6529C23.3959 22.6529 23.1781 22.8627 22.7845 23.1914C21.2244 24.4713 19.0739 24.1076 17.9284 22.4501C17.4364 21.7437 16.8742 21.0793 16.2347 20.4778C14.3934 18.7363 5.2855 16.9179 4.42812 17.1417C3.80265 17.3026 3.26854 17.6243 2.79769 18.0369C2.7766 18.0579 2.74147 18.0369 2.74849 18.0159C2.76958 17.7152 2.81174 17.4075 2.85391 17.0997ZM1.67325 34.1159L3.21935 31.9968C4.09079 30.8008 4.09079 29.1922 3.21935 27.9962L0.794788 24.6741C-0.0134001 23.5691 -0.0766496 22.0864 0.63315 20.9184C1.25159 19.8973 1.89814 18.8482 2.74147 18.0929C2.67822 18.9951 2.74147 19.8274 3.07177 20.4848C3.54965 21.436 10.5914 25.933 13.1776 26.3037C14.2458 26.4576 15.2719 26.4296 16.2277 26.2757C18.3079 25.947 20.1913 27.5067 20.1983 29.6048V29.6608C20.1983 29.6608 20.1983 29.8916 20.1632 30.2833C19.9945 32.2905 18.1181 33.7033 16.1222 33.3466C15.293 33.1997 14.4426 33.1298 13.5852 33.1508C11.0482 33.2137 3.31071 38.3402 2.86796 39.1026C2.54469 39.6621 2.39008 40.2566 2.34791 40.879C2.34791 40.907 2.31277 40.921 2.29169 40.9C2.09492 40.6692 1.90517 40.4314 1.71542 40.1796C0.366097 38.3822 0.345014 35.9273 1.66622 34.1159H1.67325ZM17.324 57.3007C15.0962 56.979 13.3322 55.2585 12.9809 53.0484L12.5662 50.4607C12.3343 49.006 11.1888 47.866 9.72702 47.6352L5.65094 46.9917C4.29459 46.7749 3.19827 45.7748 2.86796 44.4529C2.57983 43.2919 2.28466 42.089 2.34791 40.97C2.94527 41.6554 3.57776 42.2009 4.28054 42.4317C5.29956 42.7674 13.4658 40.9909 15.5671 39.4313C16.4666 38.7669 17.1834 37.9906 17.7667 37.1793C18.9896 35.4657 21.2946 35.2839 22.8056 36.7526C22.8407 36.7876 22.8759 36.8226 22.911 36.8575C22.911 36.8575 23.1219 37.0743 23.4522 37.466C24.7382 39.0187 24.3728 41.1588 22.7072 42.2988C21.9974 42.7884 21.3298 43.3479 20.7254 43.9843C18.9755 45.8167 17.1483 54.8809 17.3732 55.7341C17.5348 56.3566 17.8581 56.8881 18.2727 57.3567C18.2938 57.3777 18.2727 57.4126 18.2516 57.4057C17.9495 57.3847 17.6402 57.3427 17.331 57.3007H17.324ZM40.5155 58.4268C38.7093 59.7696 36.2426 59.7906 34.4224 58.4757L32.5952 57.1539C31.0913 56.0698 29.4749 56.0698 28.2732 56.9371L24.935 59.35C23.8246 60.1543 22.3347 60.2172 21.1611 59.5108C20.1351 58.8954 19.0809 58.2519 18.3219 57.4126C19.2285 57.4756 20.0648 57.4127 20.7254 57.0839C21.6812 56.6083 26.2 49.6004 26.5725 47.0267C26.7271 45.9776 26.699 44.9775 26.5514 44.0333C26.2351 41.9841 27.7672 40.0538 29.8474 40.0398C29.8755 40.0398 29.9106 40.0398 29.9387 40.0398C29.9387 40.0398 30.1707 40.0398 30.5642 40.0747C32.5812 40.2426 34.0008 42.11 33.6423 44.0962C33.4948 44.9215 33.4245 45.7678 33.4456 46.621C33.5088 49.1458 38.6601 56.8461 39.4262 57.2868C39.9884 57.6085 40.5857 57.7623 41.2112 57.8043C41.2393 57.8043 41.2534 57.8393 41.2323 57.8603C41.0004 58.0561 40.7614 58.2449 40.5084 58.4338L40.5155 58.4268ZM57.6982 43.0052C57.3679 45.1803 55.6251 46.8798 53.4394 47.2225L50.8322 47.6352C49.3704 47.866 48.2249 49.006 47.993 50.4607L47.3464 54.5172C47.1285 55.867 46.1236 56.958 44.7953 57.2868C43.6287 57.5735 42.42 57.8673 41.2955 57.8043C41.9843 57.2098 42.5324 56.5804 42.7643 55.881C43.1017 54.8669 41.3166 46.7399 39.7494 44.6488C39.1169 43.8025 38.379 43.1101 37.613 42.5506C35.9404 41.3336 35.5961 38.9487 37.0367 37.473C37.0789 37.431 37.1211 37.3821 37.1703 37.3401C37.1703 37.3401 37.3881 37.1303 37.7817 36.8016C39.3418 35.5217 41.4923 35.8854 42.6378 37.5429C43.1298 38.2493 43.692 38.9137 44.3315 39.5152C46.1728 41.2567 55.2807 43.0751 56.1381 42.8513C56.7635 42.6905 57.2977 42.3687 57.7685 41.9561C57.7896 41.9351 57.8247 41.9561 57.8177 41.9771C57.7896 42.3128 57.7474 42.6555 57.6982 43.0052ZM59.933 39.0816C59.3146 40.1027 58.6681 41.1518 57.8247 41.9071C57.888 41.0049 57.8247 40.1726 57.4944 39.5152C57.0165 38.564 49.9748 34.067 47.3886 33.6963C46.3274 33.5424 45.3013 33.5704 44.3456 33.7243C42.2654 34.053 40.3679 32.4863 40.3608 30.3882V30.3462C40.3608 30.3462 40.3608 30.1154 40.396 29.7237C40.5647 27.7165 42.4411 26.3037 44.4369 26.6604C45.2662 26.8073 46.1166 26.8772 46.9739 26.8562C49.5109 26.7933 57.2485 21.6668 57.6912 20.9044C58.0145 20.3449 58.1691 19.7504 58.2113 19.128C58.2113 19.1 58.2464 19.086 58.2675 19.107C58.4643 19.3378 58.654 19.5756 58.8438 19.8274C60.1931 21.6248 60.2142 24.0797 58.8929 25.8911L57.3468 28.0102C56.4754 29.2062 56.4754 30.8148 57.3468 32.0108L59.7714 35.3329C60.5796 36.4379 60.6428 37.9206 59.933 39.0886V39.0816Z"
                    fill="#443E24"></path>
                <path d="M81.1328 23.918H75.2295V46.7951H81.1328V23.918Z" fill="#443E24"></path>
                <path d="M69.5353 19.7303V13.7687H81.0225V19.7303H69.5353Z" fill="#D2FF64" stroke="#96C64A"
                    stroke-width="0.221013"></path>
                <path
                    d="M94.0792 20.6877C94.8874 19.6876 95.9415 18.9183 97.2065 18.4007C98.4785 17.8762 100.032 17.6174 101.831 17.6174C104.81 17.6174 107.109 18.2958 108.648 19.6386C110.18 20.9745 111.002 22.8698 111.086 25.2687V25.5695H116.364V25.2547C116.294 23.3314 115.928 21.5829 115.254 20.0513C114.579 18.5126 113.602 17.1768 112.365 16.0787C111.121 14.9737 109.603 14.1274 107.846 13.5469C106.097 12.9734 104.08 12.6797 101.866 12.6797C99.2375 12.6797 96.8762 13.0993 94.8592 13.9246C92.8353 14.7569 91.1205 15.9528 89.7642 17.4775C88.4148 19.0022 87.3747 20.8346 86.693 22.9398C86.0114 25.0309 85.667 27.3669 85.667 29.8917C85.667 32.4165 86.0114 34.8154 86.693 36.9346C87.3747 39.0677 88.4078 40.9211 89.7642 42.4598C91.1205 44.0054 92.8212 45.2154 94.8171 46.0546C96.8059 46.8939 99.1532 47.3205 101.782 47.3205C104.002 47.3205 106.012 47.0198 107.762 46.4323C109.519 45.8378 111.051 44.9846 112.302 43.8795C113.56 42.7815 114.544 41.4247 115.233 39.865C115.921 38.3054 116.28 36.5499 116.315 34.6616V34.3538L111.1 34.3049V34.6056C111.009 37.0395 110.173 38.9698 108.605 40.3476C107.031 41.7324 104.74 42.4318 101.789 42.4318C100.025 42.4318 98.4856 42.152 97.2135 41.6065C95.9486 41.061 94.8944 40.2567 94.0862 39.2076C93.264 38.1515 92.6526 36.8297 92.252 35.277C91.8514 33.7034 91.6476 31.878 91.6476 29.8497C91.6476 27.8215 91.8514 26.052 92.252 24.5064C92.6526 22.9887 93.264 21.7018 94.0792 20.6877Z"
                    fill="#443E24"></path>
                <path
                    d="M144.889 32.1295C144.601 31.6888 144.207 31.3042 143.715 31.0034C143.223 30.7027 142.598 30.5069 141.853 30.416L141.382 30.367C141.635 30.2761 141.881 30.1712 142.113 30.0593C142.921 29.6466 143.624 29.0941 144.186 28.4087C144.755 27.7233 145.177 26.884 145.451 25.9189C145.718 24.9677 145.859 23.8836 145.859 22.6877C145.859 19.6663 144.966 17.3443 143.209 15.7777C141.459 14.218 138.838 13.4277 135.408 13.4277H121.269V46.8097H126.806V33.6192H137.952C138.437 33.6192 138.831 33.6751 139.119 33.773C139.393 33.8709 139.611 34.0108 139.766 34.1717C139.92 34.3395 140.019 34.5284 140.061 34.7662C140.117 35.0319 140.145 35.3537 140.145 35.7103L140.187 46.502V46.8097H145.676V35.4026C145.676 34.7732 145.613 34.1787 145.493 33.6332C145.367 33.0736 145.163 32.5701 144.882 32.1365L144.889 32.1295ZM140.279 23.513C140.279 25.2474 139.801 26.5623 138.866 27.4156C137.924 28.2758 136.477 28.7094 134.579 28.7094H126.813V18.3165H134.403C136.392 18.3165 137.889 18.7501 138.852 19.6173C139.801 20.4706 140.286 21.7785 140.286 23.513H140.279Z"
                    fill="#443E24"></path>
            </svg>
        )
    },
    {
        id: 'Isometric',
        name: 'Isometric',
        logo: (
            <svg fill="black" xmlns="http://www.w3.org/2000/svg" width="146" height="60" viewBox="0 0 1660.35 300">
                <g>
                    <path
                        d="M765.81,97.62c-9.19-5.35-19.5-8.06-30.63-8.06c-11.02,0-21.3,2.71-30.54,8.06    c-9.25,5.35-16.65,12.72-21.99,21.91c-5.35,9.2-8.07,19.4-8.07,30.31v0.32c0,11.02,2.72,21.24,8.07,30.39    c5.34,9.13,12.74,16.48,21.99,21.83c9.25,5.35,19.53,8.06,30.54,8.06c11.13,0,21.43-2.71,30.63-8.06    c9.19-5.35,16.56-12.69,21.9-21.82c5.35-9.15,8.07-19.38,8.07-30.39v-0.32c0-10.91-2.71-21.1-8.07-30.31    C782.38,110.34,775.01,102.97,765.81,97.62z M779.23,149.83v0.32c0,8.04-2.01,15.58-5.98,22.42c-3.98,6.85-9.41,12.33-16.15,16.3    c-6.73,3.96-14.1,5.97-21.92,5.97c-7.83,0-15.2-2.01-21.92-5.97c-6.74-3.97-12.17-9.46-16.15-16.3    c-3.96-6.82-5.97-14.37-5.97-22.42v-0.32c0-8.05,1.99-15.6,5.91-22.43c3.91-6.83,9.32-12.31,16.06-16.29    c6.72-3.96,14.15-5.97,22.08-5.97c7.93,0,15.36,2.01,22.08,5.97c6.74,3.97,12.14,9.45,16.06,16.29    C777.24,134.24,779.23,141.79,779.23,149.83z"></path>
                    <path
                        d="M839.41,92.02h26.81l35.19,99.67l35.53-99.67h25.82v115.95h-15.79l0.33-102.96l-36.68,102.96h-19.08    l-36.68-102.96l0.16,102.96h-15.62V92.02z"></path>
                    <path
                        d="M1022.29,92.02h77.13V106h-61.02v35.85H1094v13.82h-55.59v38.16h61.02v14.14h-77.13V92.02z"></path>
                    <path d="M1182.11,106h-38.98V92.02h94.24V106h-38.98v101.97h-16.28V106z"></path>
                    <path
                        d="M1286.68,92.02h63.66c6.69,0,12.72,1.32,18.09,3.95c5.37,2.63,9.62,6.36,12.75,11.18    c3.12,4.83,4.69,10.47,4.69,16.94c0,6.47-1.64,12.12-4.93,16.94c-3.29,4.83-7.65,8.5-13.08,11.02    c-5.43,2.52-11.21,3.78-17.35,3.78h-47.71v52.14h-16.12V92.02z M1359.3,140.05c3.12-1.42,5.48-3.48,7.07-6.17    c1.59-2.69,2.38-5.95,2.38-9.79c0-5.7-1.78-10.14-5.35-13.32c-3.56-3.18-8.75-4.77-15.54-4.77h-45.07v36.18h45.07    C1352.36,142.18,1356.18,141.47,1359.3,140.05z M1328.3,145.8l21.22,4.44l39.64,57.73h-20.06L1328.3,145.8z"></path>
                    <path
                        d="M1436.87,194.81h30.05v-89.63h-30.05V92.02h74.58v13.16h-30.05v89.63h30.05v13.16h-74.58V194.81z"></path>
                    <path
                        d="M407.95,194.81H438v-89.63h-30.05V92.02h74.58v13.16h-30.05v89.63h30.05v13.16h-74.58V194.81z"></path>
                    <path
                        d="M620.36,203.7c5.7-2.88,10.01-6.77,12.81-11.57c2.78-4.77,4.19-10.06,4.19-15.71    c0-8.92-2.81-16.25-8.35-21.79c-5.74-5.74-14.69-9.81-25.09-11.29l-31.79-4.51c-7.21-1.04-12.37-3.05-15.78-6.14    c-2.87-2.6-4.27-6.1-4.27-10.7c0-4.42,1.57-8.09,4.8-11.23c3.21-3.12,8.49-4.69,15.7-4.69h57.82V92.02h-57.98    c-7.92,0-14.61,1.39-19.87,4.13c-5.35,2.79-9.34,6.53-11.87,11.13c-2.5,4.54-3.76,9.49-3.76,14.71c0,8.93,2.6,16.02,7.73,21.09    c5.47,5.41,14.03,9.07,24.76,10.57l31.47,4.48c7.45,1.07,12.99,3.26,16.45,6.52c3.05,2.87,4.54,6.71,4.54,11.76    c0,4.81-1.81,8.77-5.52,12.11c-3.74,3.37-9.25,5.07-16.39,5.07h-61.93v14.37h61.29C607.66,207.98,614.73,206.54,620.36,203.7z"></path>
                    <path
                        d="M1599.25,112.67c6.46-3.85,13.59-5.8,21.19-5.8h39.91V91.98h-39.91c-10.54,0-20.4,2.62-29.31,7.79    c-8.9,5.17-16.05,12.24-21.26,21.01c-5.23,8.8-7.88,18.62-7.88,29.17s2.65,20.37,7.88,29.17c5.21,8.78,12.36,15.85,21.26,21.01    c8.9,5.17,18.76,7.79,29.31,7.79h39.91v-14.89h-39.91c-7.6,0-14.73-1.95-21.19-5.8c-6.48-3.86-11.65-9.12-15.35-15.65    c-3.71-6.53-5.59-13.81-5.59-21.63c0-7.83,1.88-15.11,5.59-21.64C1587.61,121.79,1592.77,116.53,1599.25,112.67z"></path>
                </g>
                <path
                    d="M124.65,13.82H91.36V0h81.04v13.82h-33.28v272.37h33.28V300H91.36v-13.82h33.28V13.82z M82.68,130.37  c3.64,2.1,8.29,0.85,10.39-2.78c2.1-3.64,0.85-8.29-2.78-10.39L14.47,73.43V44.67H0v76.07h14.47V90.99L82.68,130.37z M14.47,209.01  v-29.75H0v76.07h14.47v-28.77l75.81-43.77c3.64-2.1,4.88-6.75,2.78-10.39c-2.1-3.64-6.75-4.88-10.39-2.78L14.47,209.01z  M181.08,169.63c-3.64-2.1-8.29-0.85-10.38,2.78c-2.1,3.64-0.85,8.29,2.78,10.39l75.81,43.77v28.77h14.47v-76.07h-14.47v29.75  L181.08,169.63z M249.29,90.99v29.75h14.47V44.67h-14.47v28.77l-75.81,43.77c-3.64,2.1-4.88,6.75-2.78,10.39  c2.1,3.64,6.75,4.88,10.38,2.78L249.29,90.99z"></path>
            </svg>
        )
    },
    {
        id: 'puro-earth',
        name: 'Puro Earth',
        logo: (
            <svg height="60" viewBox="0 0 147 79.5" xmlns="http://www.w3.org/2000/svg">
                <circle fill="#0331C0" cx="141.2" cy="15.5" r="5.8" />
                <path fill="#0331C0"
                    d="M78.8 49.9c-.6 0-1.2.1-1.2.1-.8.1-1.6.3-2.4.7-1 .5-1.8 1.1-2.6 1.9-1 1.1-1.7 2.4-1.9 3.9-.1.8-.1 2.3-.1 2.3v20.5h7.5v-23h7.9v-6.5h-7.2zM0 64.5c0-8.6 6.3-15 15.3-15s15.2 6.3 15.2 15v2.4H7.2c.9 4.1 4.1 6.3 8.1 6.3 3.1 0 5.3-.9 6.7-2.7h7.3c-2.1 5.4-7.3 8.9-14 8.9C6.3 79.4 0 73.1 0 64.5zm23.3-3.1c-1.1-3.8-4.2-5.7-7.9-5.7-3.9 0-6.9 2-7.9 5.7h15.8zM91.9 67.8V40.9h6.9v9h9.6v6.2h-9.6v11.6c0 3.8 2 5.3 4.8 5.3s4.8-1.4 4.8-5.3V67h6.9v.7c0 7.9-4.7 11.7-11.6 11.7-6.8 0-11.5-3.8-11.5-11.6zM145.9 57.1c-.7-2-2-3.7-3.8-4.9-1.8-1.2-3.9-1.8-6-2-2-.2-4-.2-6 0-1 .1-2 .4-2.9.7v-10h-7.5v38.6h7.5V63.1h12.1v22.4h7.4V68.6c0-1.9-.2-3.7-.8-5.5zM64.6 64.4c0-8.3-6.8-15.1-15.1-15.1s-15.1 6.8-15.1 15.1 6.8 15.1 15.1 15.1c3.3 0 6.3-1.1 8.8-2.9v2.9h6.3V64.4zm-15.1 7.9c-4.4 0-7.9-3.5-7.9-7.9s3.5-7.9 7.9-7.9 7.9 3.5 7.9 7.9-3.5 7.9-7.9 7.9zM76.9.7s-.6 0-1.2.1c-.8.1-1.6.3-2.4.7-1 .5-1.8 1.1-2.6 1.9-1 1.1-1.7 2.4-1.9 3.9-.1.8-.1 2.3-.1 2.3v20.5h7.4V7.2H84V.7h-7.1zM62.8.7h-7.5v22.4H43.3V.7h-7.4s0 11.3 0 16.9c0 1.9.2 3.8.8 5.6.7 2 2 3.7 3.8 4.9 1.8 1.2 3.9 1.8 6 2 2 .2 4 .2 6 0 2-.3 4-.9 5.7-2 1.8-1.2 3.1-2.8 3.8-4.9.6-1.8.8-3.7.8-5.6V.7M29.8 12.9c-.2-1.6-.7-3-1.4-4.5-.9-1.9-2.3-3.5-3.9-4.9-1.8-1.5-3.8-2.5-6-3-1.8-.4-3.7-.6-5.5-.3C11.2.3 9.6.9 8 1.8c-.2.1-.5.3-.7.5-.2.1-.4.2-.6.4V.6H0v41.5h7.4V27.7s1.7 1.4 3 1.8c2.3.7 4.6.8 7 .4 1.6-.3 3.2-.8 4.6-1.6 2.1-1.2 3.9-2.8 5.3-4.7 1.2-1.7 2.1-3.7 2.4-5.8.2-.6.2-2.3 0-3.9zM22 18.1c-.1.2-.1.3-.2.4-.1.2-.2.4-.3.5l-.1.2c-.4.6-.8 1.1-1.3 1.6l-.1.1c-.3.2-.5.5-.8.7-.3.2-.5.3-.8.5-.1.1-.2.1-.4.2-.2.1-.4.2-.6.2-.2.1-.3.1-.5.2-.2.1-.5.1-.7.2h-.3c-.4 0-.7.1-1.1.1-.4 0-.8 0-1.1-.1-2.4-.4-4.4-1.7-5.6-3.7v-.1c-.1-.2-.3-.5-.4-.7l-.1-.2c-.4-.9-.6-2-.6-3s.2-2.1.6-3v-.1c.1-.2.2-.4.3-.6l.1-.1.3-.4c1-1.6 2.5-2.7 4.3-3.3h.3c.2-.1.4-.1.6-.1.5-.1 1-.2 1.5-.2s1 .1 1.5.2h.1c.3.1.6.1.8.2.3.1.5.2.8.3h.1c1.3.6 2.4 1.6 3.2 2.8.3.4.5.8.7 1.2.4.9.6 2 .6 3s-.2 2.1-.6 3zM102.9 30.1c-8.3 0-15.1-6.8-15.1-15.1S94.6 0 102.9 0 118 6.8 118 15.1s-6.8 15-15.1 15zm0-22.9c-4.4 0-7.9 3.5-7.9 7.9s3.5 7.9 7.9 7.9c4.4 0 7.9-3.5 7.9-7.9s-3.5-7.9-7.9-7.9z" />
            </svg>
        )
    },
    {
        id: 'verra',
        name: 'Verra',
        logo: (
            <svg xmlns="http://www.w3.org/2000/svg" width="95" height="60" viewBox="0 0 95 42" fill="none">
                <path
                    d="M13.8254 14.4085C13.7088 14.146 13.8546 13.9126 14.1463 13.9126H16.3046C16.4796 13.9126 16.5963 14.0293 16.6254 14.1168L20.3588 22.8668H20.5046L28.1171 5.92096C28.1463 5.83346 28.2629 5.7168 28.4379 5.7168H30.5963C30.8879 5.7168 31.0338 5.9793 30.9171 6.21263L20.8838 27.9126C20.8254 28.0293 20.7379 28.1168 20.5629 28.1168H20.3588C20.1838 28.1168 20.0963 28.0293 20.0379 27.9126L13.8254 14.4085Z"
                    fill="#0E2B64"></path>
                <path
                    d="M30.4219 14.6419C30.4219 14.4377 30.5677 14.2627 30.801 14.2627H38.7344C38.9385 14.2627 39.1135 14.4377 39.1135 14.6419V16.246C39.1135 16.4502 38.9677 16.6252 38.7344 16.6252H32.9594V19.8335H37.7719C37.976 19.8335 38.151 20.0085 38.151 20.2127V21.846C38.151 22.0502 37.976 22.2252 37.7719 22.2252H32.9594V25.6377H38.7344C38.9385 25.6377 39.1135 25.8127 39.1135 26.0169V27.621C39.1135 27.8252 38.9677 28.0002 38.7344 28.0002H30.801C30.5969 28.0002 30.4219 27.8252 30.4219 27.621V14.6419V14.6419Z"
                    fill="#0E2B64"></path>
                <path
                    d="M42.4375 14.6419C42.4375 14.4377 42.5833 14.2627 42.8167 14.2627H48.3875C50.7208 14.2627 52.6458 16.1294 52.6458 18.4627C52.6458 20.271 51.45 21.7294 49.7583 22.4002L52.4417 27.3585C52.5875 27.621 52.4417 27.9127 52.1208 27.9127H50.0792C49.9042 27.9127 49.8167 27.8252 49.7583 27.7377L47.1625 22.5752H45.0042V27.5627C45.0042 27.7669 44.8292 27.9419 44.625 27.9419H42.8167C42.6125 27.9419 42.4375 27.7669 42.4375 27.5627V14.6419V14.6419ZM48.1833 20.4752C49.2042 20.4752 50.1083 19.571 50.1083 18.4919C50.1083 17.471 49.2042 16.596 48.1833 16.596H45.0042V20.4752H48.1833Z"
                    fill="#0E2B64"></path>
                <path
                    d="M55.9131 14.6419C55.9131 14.4377 56.0589 14.2627 56.2923 14.2627H61.8631C64.1964 14.2627 66.1214 16.1294 66.1214 18.4627C66.1214 20.271 64.9256 21.7294 63.2339 22.4002L65.9173 27.3585C66.0631 27.621 65.9173 27.9127 65.5964 27.9127H63.5548C63.3798 27.9127 63.2923 27.8252 63.2339 27.7377L60.6381 22.5752H58.4798V27.5627C58.4798 27.7669 58.3048 27.9419 58.1006 27.9419H56.2923C56.0881 27.9419 55.9131 27.7669 55.9131 27.5627V14.6419ZM61.6589 20.4752C62.6798 20.4752 63.5839 19.571 63.5839 18.4919C63.5839 17.471 62.6798 16.596 61.6589 16.596H58.4798V20.4752H61.6589Z"
                    fill="#0E2B64"></path>
                <path
                    d="M67.8417 27.4171L73.9083 14.2921C73.9667 14.1754 74.0542 14.0879 74.2292 14.0879H74.4333C74.6375 14.0879 74.6958 14.1754 74.7542 14.2921L80.7625 27.4171C80.8792 27.6796 80.7333 27.9129 80.4417 27.9129H78.75C78.4583 27.9129 78.3125 27.7962 78.1958 27.5337L77.2333 25.4337H71.4L70.4375 27.5337C70.35 27.7379 70.175 27.9129 69.8833 27.9129H68.1917C67.8708 27.9129 67.725 27.6796 67.8417 27.4171ZM76.2708 23.2462L74.3167 18.9587H74.2583L72.3333 23.2462H76.2708Z"
                    fill="#0E2B64"></path>
                <path
                    d="M88.5505 36.4581H6.18385C5.71719 36.4581 5.36719 36.0789 5.36719 35.6414V6.47474C5.36719 6.00807 5.74635 5.65807 6.18385 5.65807H24.6172C24.7922 5.65807 24.9089 5.83307 24.8505 6.00807L24.0339 8.07891C24.0047 8.16641 23.9172 8.22474 23.8005 8.22474H8.19635C8.05052 8.22474 7.93385 8.34141 7.93385 8.48724V33.6581C7.93385 33.8039 8.05052 33.9206 8.19635 33.9206H86.538C86.6839 33.9206 86.8005 33.8039 86.8005 33.6581V8.45807C86.8005 8.31224 86.6839 8.19557 86.538 8.19557H33.4255C33.2505 8.19557 33.1339 8.02057 33.1922 7.84557L34.1255 5.77474C34.1547 5.68724 34.2422 5.62891 34.3589 5.62891H88.5505C89.0172 5.62891 89.3672 6.00807 89.3672 6.44557V35.6122C89.3672 36.0789 88.988 36.4581 88.5505 36.4581Z"
                    fill="#057299"></path>
            </svg>
        )
    },
    {
        id: 'gold-standard',
        name: 'Gold Standard',
        logo: (
            <svg viewBox="0 0 300 300" height="60" xmlns="http://www.w3.org/2000/svg">
                <path fill="#fff"
                    d="M183.8 216.4c-8.1 4.8-17.8 7.2-28.9 7.2-15.1 0-28.6-5.4-40.4-16.2-11.8-10.8-17.8-29.1-17.8-55.1 0-25.7 5.5-45 16.4-57.8C124.1 81.8 138 75.4 155 75.4c8.9 0 17 1.6 24.2 4.7 13 5.7 21.1 15.8 24.5 30.2h43.4c-2.4-20.3-11.7-37.3-28-50.9C202.8 45.8 181.3 39 154.4 39c-30.9 0-55.8 10.3-74.6 30.9-18.8 20.6-28.2 48-28.2 82.2 0 33.8 9.3 60.4 27.9 79.9 17.9 19.4 40.8 29.1 68.8 29.1 13.5 0 25.3-2.3 35.5-6.8v-38.9z" />
                <path fill="#00B9BD" d="M154.8 143v38.6h55v55h38.6V143h-93.6z" />
            </svg>
        )
    }
];

const RegistryItem = ({ logo, name, id, isSelected, onSelect }: {
    isSelected: boolean;
    onSelect: (registryId: String) => void;
    id: string;
    name: string;
    logo: any;
    key: string;
}) => (
    <div
        className="flex flex-col justify-start items-start flex-grow gap-6 p-6 rounded-2xl bg-white border border-neutral-300"
        style={{ boxShadow: '0px 0px 20px 0 rgba(0,0,0,0.05)' }}>
        <div
            className="flex flex-col justify-center items-center self-stretch flex-grow-0 flex-shrink-0 relative overflow-hidden gap-2.5 py-9 rounded-[15px] bg-neutral-100">
            {logo}
        </div>
        <label
            className="flex justify-center items-center self-stretch flex-grow-0 flex-shrink-0 relative gap-4 cursor-pointer">
            <div className="flex-grow-0 flex-shrink-0 w-4 h-4 relative">
                <input
                    type="checkbox"
                    id={id}
                    checked={isSelected}
                    onChange={() => onSelect(id)}
                    className="absolute w-4 h-4 opacity-0 cursor-pointer"
                />
                <div
                    className={`w-4 h-4 absolute left-[-1px] top-[-1px] rounded border ${isSelected ? 'bg-primary border-primary' : 'bg-white border-neutral-300'}`}>
                    {isSelected && (
                        <svg className="w-3 h-3 text-white" viewBox="0 0 12 12" fill="none"
                            xmlns="http://www.w3.org/2000/svg">
                            <path d="M10 3L4.5 8.5L2 6" stroke="currentColor" strokeWidth="2" strokeLinecap="round"
                                strokeLinejoin="round" />
                        </svg>
                    )}
                </div>
            </div>
            <p className="flex-grow-0 flex-shrink-0 text-base text-center text-neutral-1000">
                {name}
            </p>
        </label>
    </div>
);

const InitialStep: React.FC = () => {
    const [selectedOption, setSelectedOption] = useState<string | null>(null);
    const router = useRouter();
    const profile = useSelector((state: any) => state.profileDetail.profileDetails);
    const dispatch = useDispatch();


    const onboardingOptions: OnboardingOption[] = [
        {
            title: 'ENVR Assistance',
            description: 'The ENVr team will assist you with a seamless onboarding process for your project(s)'
        },
        {
            title: 'Self onboarding',
            description: 'While you take the lead with self-onboarding, the ENVr team will be available to guide and support you every step of the way'
        }
    ];

    const handleOptionSelect = useCallback((title: string) => {
        console.log("Selecting option:", title);
        if (title == 'Self onboarding') {
            dispatch(setDetailStepper(0));
        }
        setSelectedOption(title);
    }, []);

    const handleNextClick = useCallback(() => {
        if (selectedOption) {
            // Encode the selected option to ensure it's URL-safe

            console.log(selectedOption);
            if (selectedOption == 'Carbon Registry') {


                // const nameId = 'compliance-kart-demo-marketplace';
                // const stateVariable = 'exampleState';
                // const redirectUri = 'http://localhost:3000/project-onboarding';
                const nameId = 'compliancekartenvr';
                const stateVariable = profile?._id;
                const redirectUri = 'http://localhost:3000/project-onboarding';

                //router.replace(`https://sandbox-app.carbonregistry.com/apps/${nameId}/installations/new?state=${stateVariable}&redirectUri=${encodeURIComponent(redirectUri)}`);
                router.replace(`https://app.carbonregistry.com/apps/${nameId}/installations/new?state=${stateVariable}&redirectUri=${encodeURIComponent(redirectUri)}`);
            } else if (selectedOption == 'Isometric') {
                router.replace(`${Routes.IcometricProject}`);
            } else if (selectedOption == 'Puro Earth') {
                customToast.info("will work on production environment.");
            } else if (selectedOption == 'Verra') {
                customToast.info("will work on production environment.");
            } else if (selectedOption == 'Gold Standard') {
                customToast.info("will work on production environment.");
            } else {
                const encodedOption = encodeURIComponent(selectedOption);
                router.replace(`${Routes.ProjectCreate}?option=${encodedOption}`);
            }
        } else {
        }
    }, [selectedOption, router]);

    return (
        <>
            <div className="flex flex-col items-center w-full  mx-auto bg-white h-full ">
                <div className="w-full">
                    <div className="flex flex-col gap-6 pt-xl pb-6">
                        <div className="text-center">
                            <h1 className="text-4xl font-light text-neutral-1400">Project Onboarding</h1>
                            <p className="text-base text-neutral-1200">Select the option below for your project
                                onboarding</p>
                        </div>
                        <div className="flex flex-wrap sc-sm:flex-row justify-center items-stretch gap-6 py-16">
                            {onboardingOptions.map((option, index) => (
                                <button
                                    key={index}
                                    className="w-[333px] p-6 rounded-2xl bg-white border shadow-sm overflow-hidden cursor-pointer hover:border-brand1-500 focus:outline-none focus:border focus:border-brand1-500 focus:border-1"
                                    onClick={() => handleOptionSelect(option.title)}
                                >
                                    <div className="flex justify-between items-start h-full">
                                        <div className="flex flex-col gap-3">
                                            <p className="w-[272px] text-xs font-bold uppercase text-tertiary">{option.title}</p>
                                            <p className="w-[272px] text-xl font-light text-neutral-1000">{option.description}</p>
                                        </div>
                                        <div
                                            className={`flex-shrink-0 w-4 h-4 rounded flex items-center justify-center ${selectedOption === option.title ? 'bg-primary border-primary' : 'bg-white border border-neutral-300'
                                                }`}
                                        >
                                            {selectedOption === option.title && (
                                                <svg className="w-3 h-3 text-white" viewBox="0 0 24 24" fill="none"
                                                    stroke="currentColor" strokeWidth="3" strokeLinecap="round"
                                                    strokeLinejoin="round">
                                                    <polyline points="20 6 9 17 4 12"></polyline>
                                                </svg>
                                            )}
                                        </div>
                                    </div>
                                </button>
                            ))}
                        </div>
                        <div className="flex justify-center">
                            <hr className="border-t border-neutral-200 w-[80%]" />
                        </div>
                        <div className="flex flex-wrap justify-center items-stretch gap-6 mx-auto w-full max-w-[1200px]">
                            {registries.map((registry) => (
                                <button
                                    key={registry.id}
                                    className={`p-6 rounded-2xl bg-white border ${selectedOption === registry.name ? 'border-primary' : 'border-neutral-100'
                                        } shadow-sm overflow-hidden cursor-pointer hover:border-brand1-500 focus:outline-none focus:border focus:border-brand1-500 focus:border-1 `}
                                    onClick={() => handleOptionSelect(registry.name)}
                                >
                                    <div className="flex justify-between items-start gap-2">
                                        <div className="flex flex-col gap-3">
                                            {registry.logo}
                                            <p className=" text-xs font-bold uppercase text-tertiary">{registry.name}</p>
                                        </div>
                                        <div
                                            className={`flex-shrink-0 w-4 h-4 rounded flex items-center justify-center ${selectedOption === registry.name ? 'bg-primary' : 'bg-white border border-neutral-300'
                                                }`}>
                                            {selectedOption === registry.name && (
                                                <svg className="w-3 h-3 text-white" viewBox="0 0 24 24" fill="none"
                                                    stroke="currentColor" strokeWidth="3" strokeLinecap="round"
                                                    strokeLinejoin="round">
                                                    <polyline points="20 6 9 17 4 12"></polyline>
                                                </svg>
                                            )}
                                        </div>
                                    </div>
                                </button>
                            ))}
                        </div>

                        <div className="flex justify-center mt-4 ">
                            <button
                                className={`flex items-center justify-center gap-l pr-[20px] pl-xl py-l rounded-lg ${selectedOption ? 'bg-brand1-500 text-white' : 'bg-neutral-400 text-black'
                                    } transition-colors duration-200 focus:outline-none focus:border focus:border-brand1-500 focus:border-1`}
                                onClick={handleNextClick}
                                disabled={!selectedOption}
                            >
                                <div className="text-sm ">
                                    Next
                                </div>
                                <div>
                                    <svg height="16" width="16" viewBox="0 0 16 16" fill="none"
                                        xmlns="http://www.w3.org/2000/svg">
                                        <path
                                            d="M10.9998 8L5.9998 13L5.2998 12.3L9.5998 8L5.2998 3.7L5.9998 3L10.9998 8Z"
                                            fill="currentColor" />
                                    </svg>
                                </div>

                            </button>
                        </div>
                        {/*<div className="mt-4 text-center text-sm text-gray-500">
                            Debug: Selected Option = {selectedOption || 'None'}
                        </div>*/}
                    </div>
                </div>
            </div>
        </>
    )
        ;
};

export default InitialStep;